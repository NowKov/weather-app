{"ast":null,"code":"var _jsxFileName = \"D:\\\\NewFolder\\\\React\\\\app-weather\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport search from \"./image/search.png\";\nimport axios from \"axios\";\nimport wind from \"./image/wind.png\";\nimport humidity from \"./image/humidity.png\";\nimport \"./style.css\";\nimport weather_img from \"./image/sunny_clouds.png\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"./API.js\";\nimport clouds_weather from \"./image/clouds.png\";\nimport sunny_weather from \"./image/clear.png\";\nimport rain_weather from \"./image/rain.png\";\nimport drizzle_weather from \"./image/drizzle.png\";\nimport mist_weather from \"./image/mist.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState({\n    celcius: 10,\n    name_city: \"Moscow\",\n    humidity: 10,\n    speed_wind: 4,\n    image: drizzle_weather\n  });\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // const searchPressed = () => {\n  //   // console.log(\"Search pressed\");\n  //   console.log(search);\n  //   fetch(`${API.base}weather?q=moscow&units=metric&lang=ru&appid=${API.key}`)\n  //     .then((res) => res.json())\n  //     .then((result) => {\n  //       const res_api = result;\n  //       console.log(result);\n  //       console.log(res_api);\n  //     });\n  // };\n\n  const handleClick = () => {\n    try {\n      if (name !== \"\") {\n        const urlAPI = `https://api.openweathermap.org/data/2.5/weather?q=${name}&units=metric&lang=ru&appid=cee670bb4d5aa731678042eed8ba2c28`;\n        axios.get(urlAPI).then(res => {\n          let imagePath;\n          if (res.data.weather[0].main == \"Clear\") {\n            imagePath = sunny_weather;\n          } else if (res.data.weather[0].main == \"Clouds\") {\n            imagePath = clouds_weather;\n          } else if (res.data.weather[0].main == \"Rain\") {\n            imagePath = rain_weather;\n          } else if (res.data.weather[0].main == \"Drizzle\") {\n            imagePath = drizzle_weather;\n          } else if (res.data.weather[0].main == \"Mist\") {\n            imagePath = mist_weather;\n          } else {\n            imagePath = rain_weather;\n          }\n          setData({\n            ...data,\n            celcius: res.data.main.temp,\n            name_city: res.data.name,\n            humidity: res.data.main.humidity,\n            speed_wind: res.data.wind.speed,\n            image: imagePath\n          });\n        });\n      }\n    } catch (e) {\n      if (e.response.status == 404) {\n        setError(\"Неправильно введенный город!!!\");\n      } else {\n        setError(\"\");\n      }\n      // console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(WeatherContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"vLy0pYqkLky7lBlDASlRd0pKegU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["search","axios","wind","humidity","weather_img","useEffect","useState","API","clouds_weather","sunny_weather","rain_weather","drizzle_weather","mist_weather","jsxDEV","_jsxDEV","Home","_s","data","setData","celcius","name_city","speed_wind","image","name","setName","error","setError","handleClick","urlAPI","get","then","res","imagePath","weather","main","temp","speed","e","response","status","className","children","WeatherContainer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/NewFolder/React/app-weather/src/Home.js"],"sourcesContent":["import search from \"./image/search.png\";\r\nimport axios from \"axios\";\r\nimport wind from \"./image/wind.png\";\r\nimport humidity from \"./image/humidity.png\";\r\nimport \"./style.css\";\r\nimport weather_img from \"./image/sunny_clouds.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { API } from \"./API.js\";\r\n\r\nimport clouds_weather from \"./image/clouds.png\";\r\nimport sunny_weather from \"./image/clear.png\";\r\nimport rain_weather from \"./image/rain.png\";\r\nimport drizzle_weather from \"./image/drizzle.png\";\r\nimport mist_weather from \"./image/mist.png\";\r\nconst Home = () => {\r\n  const [data, setData] = useState({\r\n    celcius: 10,\r\n    name_city: \"Moscow\",\r\n    humidity: 10,\r\n    speed_wind: 4,\r\n    image: drizzle_weather,\r\n  });\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // const searchPressed = () => {\r\n  //   // console.log(\"Search pressed\");\r\n  //   console.log(search);\r\n  //   fetch(`${API.base}weather?q=moscow&units=metric&lang=ru&appid=${API.key}`)\r\n  //     .then((res) => res.json())\r\n  //     .then((result) => {\r\n  //       const res_api = result;\r\n  //       console.log(result);\r\n  //       console.log(res_api);\r\n  //     });\r\n  // };\r\n\r\n  const handleClick = () => {\r\n    try {\r\n      if (name !== \"\") {\r\n        const urlAPI = `https://api.openweathermap.org/data/2.5/weather?q=${name}&units=metric&lang=ru&appid=cee670bb4d5aa731678042eed8ba2c28`;\r\n        axios.get(urlAPI).then((res) => {\r\n          let imagePath;\r\n          if (res.data.weather[0].main == \"Clear\") {\r\n            imagePath = sunny_weather;\r\n          } else if (res.data.weather[0].main == \"Clouds\") {\r\n            imagePath = clouds_weather;\r\n          } else if (res.data.weather[0].main == \"Rain\") {\r\n            imagePath = rain_weather;\r\n          } else if (res.data.weather[0].main == \"Drizzle\") {\r\n            imagePath = drizzle_weather;\r\n          } else if (res.data.weather[0].main == \"Mist\") {\r\n            imagePath = mist_weather;\r\n          } else {\r\n            imagePath = rain_weather;\r\n          }\r\n          setData({\r\n            ...data,\r\n            celcius: res.data.main.temp,\r\n            name_city: res.data.name,\r\n            humidity: res.data.main.humidity,\r\n            speed_wind: res.data.wind.speed,\r\n            image: imagePath,\r\n          });\r\n        });\r\n      }\r\n    } catch (e) {\r\n      if (e.response.status == 404) {\r\n        setError(\"Неправильно введенный город!!!\");\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      // console.log(e);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <WeatherContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}